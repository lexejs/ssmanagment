#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSManagment.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SM")]
	public partial class ssmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertgroup(group instance);
    partial void Updategroup(group instance);
    partial void Deletegroup(group instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void InsertlogSale(logSale instance);
    partial void UpdatelogSale(logSale instance);
    partial void DeletelogSale(logSale instance);
    partial void Insertseller(seller instance);
    partial void Updateseller(seller instance);
    partial void Deleteseller(seller instance);
    partial void Insertbuyer(buyer instance);
    partial void Updatebuyer(buyer instance);
    partial void Deletebuyer(buyer instance);
    partial void InsertlogActivity(logActivity instance);
    partial void UpdatelogActivity(logActivity instance);
    partial void DeletelogActivity(logActivity instance);
    #endregion
		
		public ssmDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SMConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ssmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ssmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ssmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ssmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<group> groups
		{
			get
			{
				return this.GetTable<group>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<logSale> logSales
		{
			get
			{
				return this.GetTable<logSale>();
			}
		}
		
		public System.Data.Linq.Table<seller> sellers
		{
			get
			{
				return this.GetTable<seller>();
			}
		}
		
		public System.Data.Linq.Table<buyer> buyers
		{
			get
			{
				return this.GetTable<buyer>();
			}
		}
		
		public System.Data.Linq.Table<logActivity> logActivities
		{
			get
			{
				return this.GetTable<logActivity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[group]")]
	public partial class group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(System.Nullable<int> value);
    partial void OnparentChanged();
    #endregion
		
		public group()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(250)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="Int")]
		public System.Nullable<int> parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _groupId;
		
		private System.Nullable<float> _count;
		
		private string _measure;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<double> _pct;
		
		private System.Nullable<double> _adminPrice;
		
		private System.Nullable<int> _reserveCount;
		
		private System.Nullable<System.DateTime> _reserveEndDate;
		
		private System.Nullable<bool> _order;
		
		private System.Nullable<int> _countToOrder;
		
		private System.Nullable<bool> _canGiveBack;
		
		private System.Nullable<bool> _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngroupIdChanging(System.Nullable<int> value);
    partial void OngroupIdChanged();
    partial void OncountChanging(System.Nullable<float> value);
    partial void OncountChanged();
    partial void OnmeasureChanging(string value);
    partial void OnmeasureChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnpctChanging(System.Nullable<double> value);
    partial void OnpctChanged();
    partial void OnadminPriceChanging(System.Nullable<double> value);
    partial void OnadminPriceChanged();
    partial void OnreserveCountChanging(System.Nullable<int> value);
    partial void OnreserveCountChanged();
    partial void OnreserveEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreserveEndDateChanged();
    partial void OnorderChanging(System.Nullable<bool> value);
    partial void OnorderChanged();
    partial void OncountToOrderChanging(System.Nullable<int> value);
    partial void OncountToOrderChanged();
    partial void OncanGiveBackChanging(System.Nullable<bool> value);
    partial void OncanGiveBackChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupId", DbType="Int")]
		public System.Nullable<int> groupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				if ((this._groupId != value))
				{
					this.OngroupIdChanging(value);
					this.SendPropertyChanging();
					this._groupId = value;
					this.SendPropertyChanged("groupId");
					this.OngroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="float")]
		public System.Nullable<float> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measure", DbType="VarChar(50)")]
		public string measure
		{
			get
			{
				return this._measure;
			}
			set
			{
				if ((this._measure != value))
				{
					this.OnmeasureChanging(value);
					this.SendPropertyChanging();
					this._measure = value;
					this.SendPropertyChanged("measure");
					this.OnmeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pct", DbType="Float")]
		public System.Nullable<double> pct
		{
			get
			{
				return this._pct;
			}
			set
			{
				if ((this._pct != value))
				{
					this.OnpctChanging(value);
					this.SendPropertyChanging();
					this._pct = value;
					this.SendPropertyChanged("pct");
					this.OnpctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminPrice", DbType="Float")]
		public System.Nullable<double> adminPrice
		{
			get
			{
				return this._adminPrice;
			}
			set
			{
				if ((this._adminPrice != value))
				{
					this.OnadminPriceChanging(value);
					this.SendPropertyChanging();
					this._adminPrice = value;
					this.SendPropertyChanged("adminPrice");
					this.OnadminPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reserveCount", DbType="Int")]
		public System.Nullable<int> reserveCount
		{
			get
			{
				return this._reserveCount;
			}
			set
			{
				if ((this._reserveCount != value))
				{
					this.OnreserveCountChanging(value);
					this.SendPropertyChanging();
					this._reserveCount = value;
					this.SendPropertyChanged("reserveCount");
					this.OnreserveCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reserveEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> reserveEndDate
		{
			get
			{
				return this._reserveEndDate;
			}
			set
			{
				if ((this._reserveEndDate != value))
				{
					this.OnreserveEndDateChanging(value);
					this.SendPropertyChanging();
					this._reserveEndDate = value;
					this.SendPropertyChanged("reserveEndDate");
					this.OnreserveEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Bit")]
		public System.Nullable<bool> order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countToOrder", DbType="Int")]
		public System.Nullable<int> countToOrder
		{
			get
			{
				return this._countToOrder;
			}
			set
			{
				if ((this._countToOrder != value))
				{
					this.OncountToOrderChanging(value);
					this.SendPropertyChanging();
					this._countToOrder = value;
					this.SendPropertyChanged("countToOrder");
					this.OncountToOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canGiveBack", DbType="Bit")]
		public System.Nullable<bool> canGiveBack
		{
			get
			{
				return this._canGiveBack;
			}
			set
			{
				if ((this._canGiveBack != value))
				{
					this.OncanGiveBackChanging(value);
					this.SendPropertyChanging();
					this._canGiveBack = value;
					this.SendPropertyChanged("canGiveBack");
					this.OncanGiveBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logSales")]
	public partial class logSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _itemId;
		
		private System.Nullable<float> _itemsCount;
		
		private System.Nullable<int> _buyerId;
		
		private System.Nullable<int> _sellerId;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<bool> _isGiveBack;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<int> _sid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnitemIdChanging(System.Nullable<int> value);
    partial void OnitemIdChanged();
    partial void OnitemsCountChanging(System.Nullable<float> value);
    partial void OnitemsCountChanged();
    partial void OnbuyerIdChanging(System.Nullable<int> value);
    partial void OnbuyerIdChanged();
    partial void OnsellerIdChanging(System.Nullable<int> value);
    partial void OnsellerIdChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnisGiveBackChanging(System.Nullable<bool> value);
    partial void OnisGiveBackChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnsidChanging(System.Nullable<int> value);
    partial void OnsidChanged();
    #endregion
		
		public logSale()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int")]
		public System.Nullable<int> itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemsCount", DbType="float")]
		public System.Nullable<float> itemsCount
		{
			get
			{
				return this._itemsCount;
			}
			set
			{
				if ((this._itemsCount != value))
				{
					this.OnitemsCountChanging(value);
					this.SendPropertyChanging();
					this._itemsCount = value;
					this.SendPropertyChanged("itemsCount");
					this.OnitemsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buyerId", DbType="Int")]
		public System.Nullable<int> buyerId
		{
			get
			{
				return this._buyerId;
			}
			set
			{
				if ((this._buyerId != value))
				{
					this.OnbuyerIdChanging(value);
					this.SendPropertyChanging();
					this._buyerId = value;
					this.SendPropertyChanged("buyerId");
					this.OnbuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellerId", DbType="Int")]
		public System.Nullable<int> sellerId
		{
			get
			{
				return this._sellerId;
			}
			set
			{
				if ((this._sellerId != value))
				{
					this.OnsellerIdChanging(value);
					this.SendPropertyChanging();
					this._sellerId = value;
					this.SendPropertyChanged("sellerId");
					this.OnsellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isGiveBack", DbType="Bit")]
		public System.Nullable<bool> isGiveBack
		{
			get
			{
				return this._isGiveBack;
			}
			set
			{
				if ((this._isGiveBack != value))
				{
					this.OnisGiveBackChanging(value);
					this.SendPropertyChanging();
					this._isGiveBack = value;
					this.SendPropertyChanged("isGiveBack");
					this.OnisGiveBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash", DbType="Float")]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int")]
		public System.Nullable<int> sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.seller")]
	public partial class seller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fullName;
		
		private System.Nullable<bool> _isAdmin;
		
		private string _login;
		
		private string _password;
		
		private System.Nullable<bool> _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnisAdminChanging(System.Nullable<bool> value);
    partial void OnisAdminChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public seller()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="VarChar(50)")]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAdmin", DbType="Bit")]
		public System.Nullable<bool> isAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this.OnisAdminChanging(value);
					this.SendPropertyChanging();
					this._isAdmin = value;
					this.SendPropertyChanged("isAdmin");
					this.OnisAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.buyer")]
	public partial class buyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _pct;
		
		private System.Nullable<bool> _canBuyOnTick;
		
		private System.Nullable<bool> _isActive;
		
		private System.Nullable<double> _debt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpctChanging(System.Nullable<double> value);
    partial void OnpctChanged();
    partial void OncanBuyOnTickChanging(System.Nullable<bool> value);
    partial void OncanBuyOnTickChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    partial void OndebtChanging(System.Nullable<double> value);
    partial void OndebtChanged();
    #endregion
		
		public buyer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pct", DbType="Float")]
		public System.Nullable<double> pct
		{
			get
			{
				return this._pct;
			}
			set
			{
				if ((this._pct != value))
				{
					this.OnpctChanging(value);
					this.SendPropertyChanging();
					this._pct = value;
					this.SendPropertyChanged("pct");
					this.OnpctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canBuyOnTick", DbType="Bit")]
		public System.Nullable<bool> canBuyOnTick
		{
			get
			{
				return this._canBuyOnTick;
			}
			set
			{
				if ((this._canBuyOnTick != value))
				{
					this.OncanBuyOnTickChanging(value);
					this.SendPropertyChanging();
					this._canBuyOnTick = value;
					this.SendPropertyChanged("canBuyOnTick");
					this.OncanBuyOnTickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debt", DbType="Float")]
		public System.Nullable<double> debt
		{
			get
			{
				return this._debt;
			}
			set
			{
				if ((this._debt != value))
				{
					this.OndebtChanging(value);
					this.SendPropertyChanging();
					this._debt = value;
					this.SendPropertyChanged("debt");
					this.OndebtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logActivity")]
	public partial class logActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _action;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _buyerId;
		
		private System.Nullable<bool> _informAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnSellerIdChanging(System.Nullable<int> value);
    partial void OnSellerIdChanged();
    partial void OninformAdminChanging(System.Nullable<bool> value);
    partial void OninformAdminChanged();
    #endregion
		
		public logActivity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="VarChar(150)")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sellerId", Storage="_buyerId", DbType="Int")]
		public System.Nullable<int> SellerId
		{
			get
			{
				return this._buyerId;
			}
			set
			{
				if ((this._buyerId != value))
				{
					this.OnSellerIdChanging(value);
					this.SendPropertyChanging();
					this._buyerId = value;
					this.SendPropertyChanged("SellerId");
					this.OnSellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_informAdmin", DbType="Bit")]
		public System.Nullable<bool> informAdmin
		{
			get
			{
				return this._informAdmin;
			}
			set
			{
				if ((this._informAdmin != value))
				{
					this.OninformAdminChanging(value);
					this.SendPropertyChanging();
					this._informAdmin = value;
					this.SendPropertyChanged("informAdmin");
					this.OninformAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
